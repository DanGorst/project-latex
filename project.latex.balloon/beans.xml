<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-2.5.xsd">

    <import resource="email.xml" />

    <bean id="baudRate" class="java.lang.Integer">
        <constructor-arg value="150" />
    </bean>

    <bean id="controllerRunner" class="project.latex.balloon.DefaultControllerRunner">
        <constructor-arg ref="baudRate" />
    </bean>
   
    <bean id="uuidSentenceIdGenerator" class="project.latex.balloon.UUIDSentenceIDGenerator" />
   
    <bean id="flightInfoManager" class="project.latex.balloon.FlightInfoManager">
        <constructor-arg value="flightInfo.json" />
    </bean>
    
    <bean id="incrementalSentenceIdGenerator" class="project.latex.balloon.IncrementalSentenceIdGenerator">
        <constructor-arg ref="flightInfoManager" />
    </bean>
   
    <bean id="dataFolderResource" class="project.latex.balloon.DataFolderResource" />
   
    <bean id="transmittedDataKeysResource" class="project.latex.balloon.TransmittedDataKeysResource">
        <constructor-arg value="telemetryKeys.json" />
    </bean>
   
    <!-- Sensors -->
    <bean id="dummySensorController" class="project.latex.balloon.sensor.DummySensorController">
        <constructor-arg value="temp_external" />
    </bean>
   
    <bean id="ubloxGpsSensor" class="project.latex.balloon.sensor.gps.UBloxGPSSensor">    
    </bean>
   
    <bean id="gpsSensorController" class="project.latex.balloon.sensor.gps.GPSSensorController">
        <constructor-arg ref="ubloxGpsSensor" />
        <constructor-arg>
            <list>
                <value>time</value>
                <value>latitude</value>
                <value>longitude</value>
                <value>altitude</value>
                <value>heading</value>
                <value>speed</value>
            </list>
        </constructor-arg>
    </bean>
   
    <!-- Data writers -->
    <bean id="fileDataWriter" class="project.latex.balloon.writer.FileDataWriter">
        <constructor-arg ref="dataFolderResource" />
        <constructor-arg ref="transmittedDataKeysResource" />
        <constructor-arg ref="dataModelConverter" />
    </bean>
   
    <bean id="adler32ChecksumGenerator" class="project.latex.balloon.writer.Adler32ChecksumGenerator" />
   
    <bean id="crc16ccittChecksumGenerator" class="project.latex.balloon.writer.CRC16CCITTChecksumGenerator" />
   
    <bean id="dataModelConverter" class="project.latex.balloon.writer.DataModelConverter">
        <constructor-arg ref="crc16ccittChecksumGenerator" />
    </bean>
   
    <bean id="httpDataWriter" class="project.latex.balloon.writer.HttpDataWriter">
        <constructor-arg ref="transmittedDataKeysResource" />
        <constructor-arg ref="dataModelConverter" />
        <constructor-arg value="http://project-latex-dlfldigi.herokuapp.com/" />
    </bean>
   
    <bean id="serialDataWriter" class="project.latex.balloon.writer.SerialDataWriter">
        <constructor-arg ref="transmittedDataKeysResource" />
        <constructor-arg ref="dataModelConverter" />
        <constructor-arg ref="baudRate" />
    </bean>
   
    <bean id="chunkedSerialDataWriter" class="project.latex.balloon.writer.ChunkedSerialDataWriter" init-method="start">
        <constructor-arg ref="baudRate" />
        <constructor-arg ref="serialDataWriter" />
    </bean>

    <!-- SSDV -->

    <bean id="serialSsdvDataWriter" class="project.latex.balloon.ssdv.SerialSsdvDataWriter">
      <constructor-arg ref="baudRate" />
    </bean>

    <bean id="ssdvEncoder" class="project.latex.balloon.ssdv.DefaultSsdvEncoder"></bean>

    <bean id="ssdvPiCamImageSource" class="project.latex.balloon.ssdv.DirectorySsdvImageSource">
      <constructor-arg name="imagesDirectoryPath" value="pi-cam-images" />
    </bean>

    <bean id="encodedImageSource" class="project.latex.balloon.ssdv.DirectorySsdvImageSource">
        <constructor-arg name="imagesDirectoryPath" value="encoded-image" />
    </bean>

    <bean id="lastModifiedSsdvEncoderController" class="project.latex.balloon.ssdv.LastModifiedSsdvEncoderController">
      <constructor-arg name="piCamImageSource" type="project.latex.balloon.ssdv.SsdvImageSource" ref="ssdvPiCamImageSource" />
      <constructor-arg name="encodedImageSource" type="project.latex.balloon.ssdv.DirectorySsdvImageSource" ref="encodedImageSource" />
      <constructor-arg type="project.latex.balloon.ssdv.SsdvEncoder" ref="ssdvEncoder" />
    </bean>

    <bean id="ssdvController" class="project.latex.balloon.ssdv.SsdvController">
      <constructor-arg type="project.latex.balloon.ssdv.SsdvEncoderController" ref="lastModifiedSsdvEncoderController" />
      <constructor-arg type="project.latex.balloon.ssdv.SsdvDataWriter" ref="serialSsdvDataWriter" />
    </bean>

    <!-- Camera sensors -->
    <bean id="piCamImageSource" class="project.latex.balloon.writer.camera.DirectoryImageSource">
        <constructor-arg name="imagesDirectoryPath" value="pi-cam-images" />
    </bean>
    
    <bean id="piCamController" class="project.latex.balloon.sensor.CameraController">
        <constructor-arg type="project.latex.balloon.writer.camera.ImageSource" ref="piCamImageSource" />
        <constructor-arg type="project.latex.balloon.writer.camera.CameraDataWriter" ref="emailCameraDataWriter" />
        <constructor-arg type="java.lang.String" value="PiCam" />
    </bean>
   
    <bean id="cameraWriter" class="project.latex.balloon.writer.CameraFileWriter">
        <constructor-arg ref="dataFolderResource" />
    </bean>
    
    <bean id="htmlImageFinder" class="project.latex.balloon.writer.camera.gopro.HtmlParsingImageFinder">
    </bean>
    
    <bean id="goProImageSource" class="project.latex.balloon.writer.camera.gopro.GoProImageSource">
        <constructor-arg type="project.latex.balloon.writer.camera.gopro.ImageFinder" ref="htmlImageFinder" />
        <constructor-arg type="java.lang.String" value="/home/pi/goProImages" />
    </bean>
    
    <bean id="goProController" class="project.latex.balloon.sensor.CameraController">
        <constructor-arg type="project.latex.balloon.writer.camera.ImageSource" ref="goProImageSource" />
        <constructor-arg type="project.latex.balloon.writer.camera.CameraDataWriter" ref="emailCameraDataWriter" />
        <constructor-arg type="java.lang.String" value="GoPro" />
    </bean>
   
    <!-- Now the main balloon controller -->
    <bean id="balloonController" class="project.latex.balloon.BalloonController">
        <property name="cameraSensor" ref="piCamController" />
        <property name="sentenceIdGenerator" ref="incrementalSentenceIdGenerator" />
        <property name="timeKey" value="time" />
        <property name="dateKey" value="date" />
        <property name="payloadNameKey" value="payload_name" />
        <property name="sentenceIdKey" value="sentence_id" />
        <property name="controllerRunner" ref="controllerRunner" />
        <property name="sensors">
            <list>
                <ref bean="dummySensorController" />
                <ref bean="gpsSensorController" />
            </list>
        </property>
        <property name="dataModelConsumers">
            <list>
            </list>
        </property>
        <property name="dataWriters">
            <list>
                <ref bean="fileDataWriter" />
                <ref bean="chunkedSerialDataWriter" />
                <ref bean="httpDataWriter" />
            </list>
        </property>
        <property name="ssdvController" ref="ssdvController" />
    </bean>
</beans>
